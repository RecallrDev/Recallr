events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Increase upload size limits
    client_max_body_size 50M;

    # HTTP â†’ HTTPS Redirect
    server {
        listen 80;
        server_name dev.recallr.eu;
        return 301 https://$server_name$request_uri;
    }

    upstream frontend {
        server frontend:5173;
    }
    
    upstream backend {
        server recallr-backend-dev:8000;
    }
    
    server {
        listen 443 ssl http2;
        server_name dev.recallr.eu;
        
        # SSL Configuration
        ssl_certificate /etc/letsencrypt/live/dev.recallr.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dev.recallr.eu/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        
        # Backend API
        location /api/ {
            proxy_pass http://backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Image uploads (from backend)
        location /images/ {
            proxy_pass http://backend/images/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static uploads serving
        location /uploads/ {
            proxy_pass http://backend/uploads/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Security headers
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            add_header X-XSS-Protection "1; mode=block";
            
            # Cache images for 30 days
            expires 30d;
            add_header Cache-Control "public, immutable";
            
            # Allow CORS for your domains
            add_header Access-Control-Allow-Origin "https://dev.recallr.eu";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
        }
        
        # Backend health
        location /health {
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Frontend (catch-all)
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Vite HMR
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}